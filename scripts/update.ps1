# Use this script to
# 1. Create a fresh virtual environment
# 2. Update all dependencies to the latest version
# 3. Export the dependencies to requirements.txt.

$ErrorActionPreference = "Stop"
Set-StrictMode -Version Latest
$PSNativeCommandUseErrorActionPreference = $true # might be true by default

Push-Location $PSScriptRoot\..
try {

    $new_virtualenv = $false
    if (Test-Path .\.venv) {
        Write-Host "Removing existing virtual environment..."
        Remove-Item .\.venv -Recurse -Force -ErrorAction SilentlyContinue
    } else {
        $new_virtualenv = $true
    }

    Write-Output "Creating a new virtual environment..."
    $pythonPath = "$PSScriptRoot\Get-PythonPath.py"
    & $pythonPath -m venv .venv

    Write-Output "Activating the virtual environment..."
    & .\.venv\Scripts\Activate.ps1

    Write-Output "Installing package (with dev dependencies)..."
    pip install -e .[dev]

    Write-Output "Updating pre-commit hooks..."
    pre-commit autoupdate

    Write-Output "Installing pre-commit hooks..."
    pre-commit install

    Write-Output "Exporting installed packages to requirements.txt..."
    Write-Output "# This file is automatically generated by freeze.ps1. Do not edit it manually." > requirements.txt
    pip list --format freeze --exclude-editable >> requirements.txt

    if ($new_virtualenv) {
        # Give the user a hint about conventional commits
        Write-Output ""
        .\scripts\hint_conventional_commits.ps1
    }
} finally {
    Pop-Location
}
